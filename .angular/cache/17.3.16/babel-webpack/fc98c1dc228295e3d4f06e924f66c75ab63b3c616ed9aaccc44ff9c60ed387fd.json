{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthGuard = void 0;\nconst i0 = __importStar(require(\"@angular/core\"));\nconst i1 = __importStar(require(\"@angular/router\"));\nconst i2 = __importStar(require(\"@app/_services\"));\nlet AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, accountService) {\n      this.router = router;\n      this.accountService = accountService;\n    }\n    canActivate(route, state) {\n      const account = this.accountService.accountValue;\n      if (account) {\n        // check if route is restricted by role\n        if (route.data.roles && !route.data.roles.includes(account.role)) {\n          // role not authorized so redirect to home page\n          this.router.navigate(['/']);\n          return false;\n        }\n        // authorized so return true\n        return true;\n      }\n      // not logged in so redirect to login page with the return url\n      this.router.navigate(['/account/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    }\n    static {\n      this.ɵfac = function AuthGuard_Factory(t) {\n        return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AccountService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthGuard,\n        factory: AuthGuard.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthGuard;\n})();\nexports.AuthGuard = AuthGuard;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}